$column-system: 12;
$breakpoints: (
  "sm": 576px,
  "md": 768px,
  "lg": 992px,
  "xl": 1200px,
);

.agrid {
  --agrid-gap: 1rem;
  --agrid-x-padding: 1rem;
  --agrid-x-margin: 1rem;
  display: grid;
  grid-template-columns: repeat(12, minmax(0, 1fr));
  gap: var(--agrid-gap);
  padding-inline: var(--agrid-x-padding);
  margin-inline: var(--agrid-x-margin);
}

%col-full-width {
  grid-column: auto / span 12;
}

@mixin init-grid {
  @include generate-base-cols;
  @include generate-resp-cols;
}

// Generate simple col-span columns
@mixin generate-base-cols {
  @for $i from 1 through $column-system {
    .acol-#{$i} {
      grid-column: auto / span $i;
    }
  }
}

// Generate responsive cols - has a fallback for 12 col width
@mixin generate-resp-cols {
  @each $key, $value in $breakpoints {
    *[class*="col-#{$key}"] {
      @extend %col-full-width;
    }

    @media (min-width: #{$value}) {
      @for $col-num from 1 through $column-system {
        .acol-#{$key}-#{$col-num} {
          grid-column: auto / span $col-num;
        }
      }
    }
  }
}

@include init-grid;
